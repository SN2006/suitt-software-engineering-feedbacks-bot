import asyncio
import os
import requests

from aiogram import *
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from dotenv import *


load_dotenv(".env")
TOKEN = os.getenv("BOT_TOKEN")
SERVER_URL = os.getenv("SERVER_URL")
bot = Bot(TOKEN)
disp = Dispatcher()

main_keyboard_markup = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="–°–∞–π—Ç —É–Ω—ã–≤–µ—Ä—Å–∏—Ç–µ—Ç—É", url="https://suitt.edu.ua/")],
        [InlineKeyboardButton(text="–û—Å–≤—ñ—Ç–Ω—è –ø—Ä–æ–≥—Ä–∞–º–∞", url="https://suitt.edu.ua/wp-content/uploads/2023/12/121-OPP-2-13-04-B.pdf")],
        [InlineKeyboardButton(text="–ù–∞–≤—á–∞–ª—å–Ω–∏–π –ø–ª–∞–Ω", url="https://suitt.edu.ua/wp-content/uploads/2023/11/NP_B_121_2023.pdf")],
        [InlineKeyboardButton(text="–°–∏–ª–∞–±—É—Å–∏", url="https://suitt.edu.ua/sylabusy-121-inzheneriia-prohramnoho-zabezpechennia-bakalavr/")],
        [InlineKeyboardButton(text="–í—ñ–¥–≥—É–∫–∏", url="https://suitt-software-engineering-feedbacks.pages.dev/")],
        [InlineKeyboardButton(text="–ó–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫", callback_data="feedback")],
    ]
)

class GiveFeedback(StatesGroup):
    read_feedback = State()

async def save_feedback(username: str, first_name: str, text: str):
    feedback = {
        "username": username,
        "first_name": first_name,
        "text": text
    }
    response = requests.post(SERVER_URL + "/feedbacks", json=feedback)



@disp.message(CommandStart())
async def start_handler(msg: Message):
    await msg.answer(
        "–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç—É –æ—Å–≤—ñ—Ç–Ω—å–æ-–ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–æ—ó –ø—Ä–æ–≥—Ä–∞–º–∏ \"–Ü–Ω–∂–µ–Ω–µ—Ä—ñ—è –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è\" –î–µ—Ä–∂–∞–≤–Ω–æ–≥–æ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—É —ñ–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ–π —ñ –∑–≤'—è–∑–∫—É! üòâ"
        "\n–¢—É—Ç –≤–∏ –º–æ–∂–µ—Ç–µ –∑–∞–ª–∏—à–∏—Ç–∏ —Å–≤–æ—ó –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó —â–æ–¥–æ –æ—Å–≤—ñ—Ç–Ω—å–æ—ó –ø—Ä–æ–≥—Ä–∞–º–∏",
        reply_markup=main_keyboard_markup,
    )

@disp.callback_query(F.data == "feedback")
async def feedback_handler(query: CallbackQuery, state:FSMContext):
    await state.set_state(GiveFeedback.read_feedback)
    await bot.send_message(query.from_user.id, "–í–≤–µ–¥—ñ—Ç—å –≤–∞—à –≤—ñ–¥–≥—É–∫: ")

@disp.message(GiveFeedback.read_feedback)
async def save_feedback_handler(msg: Message, state:FSMContext):
    await state.clear()

    text = msg.text
    first_name = msg.from_user.first_name
    username = msg.from_user.username

    await save_feedback(username, first_name, text)
    await msg.answer("–î—è–∫—É—é –∑–∞ –≤–∞—à –≤—ñ–¥–≥—É–∫!", reply_markup=main_keyboard_markup)

async def main():
    await disp.start_polling(bot)


asyncio.run(main())
